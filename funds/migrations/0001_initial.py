# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-04 00:21
from __future__ import unicode_literals

from decimal import Decimal
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('systems', '0002_system_runners'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fundname', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, help_text='rationale', max_length=50)),
                ('slug', models.SlugField(default=None, max_length=70, unique=True)),
                ('bettingratio', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('managementfee', models.DecimalField(blank=True, decimal_places=2, help_text='weekly fund/site management fee %', max_digits=6)),
                ('performancefee', models.DecimalField(blank=True, decimal_places=2, help_text='fee should performance exceed target %', max_digits=6)),
                ('bailoutfee', models.DecimalField(blank=True, decimal_places=2, help_text='fee if wishing to withdraw full capital within season (end of month) %', max_digits=6)),
                ('currency', models.CharField(blank=True, choices=[('AUD', 'AUD'), ('GBP', 'GBP')], help_text='fund base currency', max_length=10)),
                ('stakescap', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('performancethreshold', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('systemslist', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('paysDividends', models.BooleanField()),
                ('bfbalance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('winspbalance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('openingbank', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('nosystems', models.SmallIntegerField(blank=True, default=0)),
                ('jratio', models.FloatField(blank=True, default=None)),
                ('oratio', models.FloatField(blank=True, default=None)),
                ('sratio', models.FloatField(blank=True, default=None)),
                ('tratio', models.FloatField(blank=True, default=None)),
                ('lratio', models.FloatField(blank=True, default=None)),
                ('miratio', models.FloatField(blank=True, default=None)),
                ('racedates', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('investments', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('sequences', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('returns', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('bfprices', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('winpattern', models.TextField(blank=True, null=True)),
                ('placepattern', models.TextField(blank=True, null=True)),
                ('cashoutthreshold', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('totalinvested', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('startdate', models.DateField(default=None)),
                ('enddate', models.DateField(default=None)),
                ('nobets', models.FloatField(blank=True, null=True)),
                ('nowinners', models.FloatField(blank=True, null=True)),
                ('nolosers', models.FloatField(blank=True, null=True)),
                ('uniquewinners', models.FloatField(blank=True, null=True)),
                ('maxlosingsequence', models.IntegerField(blank=True, null=True)),
                ('avglosingsequence', models.FloatField(blank=True, null=True)),
                ('maxwinningsequence', models.IntegerField(blank=True, null=True)),
                ('minbalance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('maxbalance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('isLive', models.BooleanField()),
                ('a_e', models.FloatField()),
                ('year', models.IntegerField()),
                ('maxstake', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('avgstake', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('individualrunners', models.FloatField(max_length=5)),
                ('liveSince', models.DateTimeField(null=True)),
                ('bfwinsr', models.FloatField(blank=True, null=True)),
                ('cashoutbalance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('totalwinnings', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6)),
                ('totalroi', models.FloatField(blank=True, null=True)),
                ('dailybfbalances', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('dailycashoutbalances', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('bfcumtotalbalances', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('bfstartdaybalances', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('bfenddaybalances', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('places', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('systems', models.ManyToManyField(to='systems.System')),
            ],
            options={
                'default_permissions': ('view', 'add', 'change', 'delete'),
                'ordering': ['-totalwinnings'],
                'get_latest_by': 'wentLive',
            },
        ),
    ]
